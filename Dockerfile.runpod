# RunPod-native Dockerfile for FLUX.1-dev API
# Using RunPod's official PyTorch base image
FROM runpod/pytorch:2.2.0-py3.10-cuda12.1.1-devel-ubuntu22.04

# Set working directory
WORKDIR /app

# Set essential environment variables for FLUX.1-dev
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV HF_HOME=/app/cache
ENV TRANSFORMERS_CACHE=/app/cache
ENV DIFFUSERS_CACHE=/app/cache
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512

# Create cache directory
RUN mkdir -p /app/cache

# Install additional system dependencies if needed
RUN apt-get update && \
    apt-get install -y wget curl unzip git build-essential && \
    rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Try to install performance optimizations (optional)
RUN pip install --no-cache-dir ninja || echo "ninja install failed (optional)"
RUN pip install --no-cache-dir "flash-attn>=2.7.1,<=2.8.0" --no-build-isolation || echo "flash-attn install failed (optional - will use slower fallback)"

# Copy application files
COPY handler.py runpod_api.py ./

# Simple health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import torch; exit(0 if torch.cuda.is_available() else 1)"

# Run the application
CMD ["python", "handler.py"]